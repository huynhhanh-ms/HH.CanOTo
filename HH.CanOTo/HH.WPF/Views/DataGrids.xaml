<UserControl x:Class="HH.WPF.DataGrids"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:HH.WPF.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             d:DataContext="{d:DesignInstance ViewModels:ShipmentListViewModel}"
             d:DesignHeight="566"
             d:DesignWidth="600"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>


    <DockPanel>
        <!--<Button Content="Add Row" Click="AddRow_Click" />-->
        <!--<FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" Height="0" />-->
        <DataGrid Name="gridview1" AutoGenerateColumns="False"
            GridLinesVisibility="All"
            LoadingRow="gridview1_LoadingRow"
            KeyUp="gridview1_KeyUp"
            CanUserSortColumns="False"
            CanUserAddRows="False"
            CanUserDeleteRows="False"

                CellEditEnding="gridview1_CellEditEnding"
                SelectionMode="Single"
                MouseLeftButtonDown="myDataGrid_MouseLeftButtonDown"
                HeadersVisibility="All"
                
                ItemsSource="{Binding ShipmentList}" >
            <!--<DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>-->
            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                  EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                  ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox IsChecked="{Binding DataContext.IsAllItems1Selected, Source={x:Reference DataContextProxy}}" />
                            </Border>
                        </DataGridCheckBoxColumn.Header>

                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>-->
                <!--Mã-->
                <DataGridTextColumn Binding="{Binding Id}"
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                              Width="75" Header="Mã" 
                              IsReadOnly="True" />
                <!--Tên Khách Hàng-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Tên Khách Hàng"
                    Binding="{Binding TenKhachHang}"
                    >
                </DataGridTextColumn>

                <!--Địa Chỉ-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Địa Chỉ" Binding="{Binding DiaChi}">
                </DataGridTextColumn>

                <!--Loại Hàng Hóa-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Loại Hàng Hóa" Binding="{Binding LoaiHangHoa}"
                    >
                </DataGridTextColumn>

                <!--Biển Số Xe-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Biển Số Xe" Binding="{Binding BienSoXe}">
                </DataGridTextColumn>

                <!--TL Xe Hàng-->
                <materialDesign:DataGridTextColumn Width="120"
                                             Binding="{Binding TlXeHang}"
                                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                             Header="TL Xe Hàng"
                                             IsReadOnly="True" >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"
                                 TextAlignment="Right"
                                 TextWrapping="Wrap" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:DataGridTextColumn>

                <!--TL Xe-->
                <materialDesign:DataGridTextColumn Width="120"
                                             Binding="{Binding TlXe}"
                                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                             Header="TL Xe"
                                             IsReadOnly="True" >

                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"
                                 TextAlignment="Right"
                                 TextWrapping="Wrap" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:DataGridTextColumn>
                <!--TL Hàng-->
                <materialDesign:DataGridTextColumn Width="120"
                                             Binding="{Binding TlHang}"
                                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                             Header="TL Hàng"
                                             IsReadOnly="True" >

                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"
                                 TextAlignment="Right"
                                 TextWrapping="Wrap" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:DataGridTextColumn>
                <!--Ngày Cân-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Ngày Cân" Binding="{Binding NgayCan, StringFormat=\{0:MM/dd/yyyy\}}"
                              IsReadOnly="True"
                    ></DataGridTextColumn>
                <!--Giờ Cân Xe-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Giờ Cân Xe" Binding="{Binding GioCanXe, StringFormat=\{0:HH:MM\}}"
                              IsReadOnly="True"
                    ></DataGridTextColumn>
                <!--Giờ Cân Xác-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Giờ Cân Xác" Binding="{Binding GioCanXac, StringFormat=\{0:HH:MM\}}"
                              IsReadOnly="True" 
                    ></DataGridTextColumn>
                <!--Ghi Chú-->
                <DataGridTextColumn
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Ghi Chú" Binding="{Binding GhiChu}"
                    >
                    <!--<DataGridTextColumn.Binding>
                        <Binding Path="GhiChu">
                            <Binding.ValidationRules>
                                <ViewModels:NotEmptyValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>-->
                </DataGridTextColumn>
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                <!--
                    <materialDesign:DataGridComboBoxColumn Width="100"
                                                 Header="Food with long header"
                                                 IsEditable="True"
                                                 ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}"
                                                 SelectedValueBinding="{Binding Food}">
                        -->
                <!--Setting the editing element style allows access to all of the combo box's properties
                        <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                <Setter Property="IsEditable" Value="True" />
                            </Style>
                        </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
            -->
                <!--
                    </materialDesign:DataGridComboBoxColumn>-->
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>

</UserControl>


