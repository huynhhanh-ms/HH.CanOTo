<UserControl x:Class="HH.WPF.DataGrids"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:domain="clr-namespace:HH.WPF.Domain"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             d:DataContext="{d:DesignInstance domain:ListsAndGridsViewModel}"
             d:DesignHeight="566"
             d:DesignWidth="600"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel>
        <FrameworkElement x:Name="DataContextProxy" DataContext="{Binding}" Height="0" />
        <ScrollViewer>
            <DataGrid Name="gridview1" AutoGenerateColumns="False"
                CanUserAddRows="False"
                MinHeight="400px"
                CellEditEnding="gridview1_CellEditEnding"
                SelectionMode="Single"
                HeadersVisibility="All"
                ItemsSource="{Binding Items1}" >
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                  EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                  ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <Border Background="Transparent">
                                <CheckBox IsChecked="{Binding DataContext.IsAllItems1Selected, Source={x:Reference DataContextProxy}}" />
                            </Border>
                        </DataGridCheckBoxColumn.Header>

                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>

                    <DataGridTextColumn Binding="{Binding Code}"
                              EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                              Header="Code" />

                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                    <materialDesign:DataGridTextColumn EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                             ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                             Header="Name">
                        <materialDesign:DataGridTextColumn.Binding>
                            <Binding Path="Name">
                                <Binding.ValidationRules>
                                    <domain:NotEmptyValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </materialDesign:DataGridTextColumn.Binding>
                    </materialDesign:DataGridTextColumn>

                    <!-- set a max length to get an indicator in the editor -->
                    <DataGridTextColumn EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                              Header="Description">
                        <DataGridTextColumn.Binding>
                            <Binding Path="Description">
                                <Binding.ValidationRules>
                                    <domain:NotEmptyValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>

                    <materialDesign:DataGridTextColumn Width="120"
                                             Binding="{Binding Numeric}"
                                             EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
                                             Header="Number with long header">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}"
                                 TextAlignment="Right"
                                 TextWrapping="Wrap" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="HorizontalContentAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>

                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </materialDesign:DataGridTextColumn>

                    <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                    <materialDesign:DataGridComboBoxColumn Width="100"
                                                 Header="Food with long header"
                                                 IsEditable="True"
                                                 ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}"
                                                 SelectedValueBinding="{Binding Food}">
                        <!--Setting the editing element style allows access to all of the combo box's properties
                        <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                <Setter Property="IsEditable" Value="True" />
                            </Style>
                        </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
            -->
                    </materialDesign:DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>
    </StackPanel>
</UserControl>


